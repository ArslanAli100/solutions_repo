{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Here's a detailed explanation of projectile motion, including its governing equations, derivations, and graphical representations. Projectile Motion: Theory and Analysis 1. Introduction Projectile motion refers to the motion of an object that is launched into the air and moves under the influence of gravity alone, assuming air resistance is negligible. It is a fundamental concept in physics with applications in sports, engineering, and astrophysics. The motion of the projectile can be broken down into horizontal (x-direction) and vertical (y-direction) components, each governed by Newton's laws of motion. 2. Equations of Motion 2.1 Assumptions The projectile is launched from an initial height \\( y_0 = 0 \\) . Air resistance is neglected. The acceleration due to gravity ( \\( g \\) ) is constant and acts downward. The initial velocity \\( v_0 \\) is at an angle \\( \\theta \\) with the horizontal axis. 2.2 Decomposing Initial Velocity The initial velocity \\( v_0 \\) is split into horizontal and vertical components: $$ v_{0x} = v_0 \\cos\\theta $$ $$ v_{0y} = v_0 \\sin\\theta $$ 3. Horizontal Motion Since there is no horizontal acceleration (neglecting air resistance), the horizontal displacement \\( x \\) after time \\( t \\) is given by: \\[ x = v_{0x} t = v_0 \\cos\\theta \\cdot t \\] The horizontal velocity remains constant: \\[ v_x = v_0 \\cos\\theta \\] 4. Vertical Motion The vertical motion is influenced by gravity. Using kinematic equations: \\[ y = v_{0y} t - \\frac{1}{2} g t^2 \\] The vertical velocity at time \\( t \\) is: \\[ v_y = v_{0y} - g t \\] The projectile reaches its maximum height when \\( v_y = 0 \\) , which occurs at: \\[ t_{\\text{max}} = \\frac{v_0 \\sin\\theta}{g} \\] The maximum height ( \\( H \\) ) is given by: \\[ H = \\frac{(v_0 \\sin\\theta)^2}{2g} \\] 5. Time of Flight The total time the projectile spends in the air is found by setting \\( y = 0 \\) in the vertical displacement equation: \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\( t \\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\] 6. Range of the Projectile The range \\( R \\) is the total horizontal distance traveled before the projectile lands: \\[ R = v_{0x} \\cdot t \\] Substituting \\( v_{0x} = v_0 \\cos\\theta \\) and the total time of flight: \\[ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} \\] Using the trigonometric identity \\( 2\\sin\\theta\\cos\\theta = \\sin(2\\theta) \\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] The maximum range occurs when \\( \\theta = 45^\\circ \\) , giving: \\[ R_{\\text{max}} = \\frac{v_0^2}{g} \\] 7. Graphical Representation Let's visualize how the range varies with launch angle. Python Code for Simulation This script plots: The trajectory of a projectile. The range as a function of launch angle. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # Gravity (m/s^2) v0 = 20 # Initial velocity (m/s) angles = np.linspace(0, 90, 100) # Launch angles from 0 to 90 degrees # Function to compute projectile range def projectile_range(theta, v0, g=9.81): theta_rad = np.radians(theta) return (v0**2 * np.sin(2 * theta_rad)) / g # Compute ranges for different angles ranges = [projectile_range(theta, v0) for theta in angles] # Trajectory Simulation for a specific angle (e.g., 45\u00b0) theta_trajectory = 45 # Change this to see different angles t_flight = (2 * v0 * np.sin(np.radians(theta_trajectory))) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(np.radians(theta_trajectory)) * t y = v0 * np.sin(np.radians(theta_trajectory)) * t - 0.5 * g * t**2 # Plot 1: Projectile Trajectory plt.figure(figsize=(8, 6)) plt.plot(x, y, label=f'Trajectory at {theta_trajectory}\u00b0', color='b') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion Trajectory') plt.legend() plt.grid() plt.show() # Plot 2: Range vs Angle plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f'Initial velocity: {v0} m/s', color='r') plt.axvline(45, linestyle=\"--\", color=\"b\", label=\"Max range at 45\u00b0\") plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid() plt.show() Graph Analysis Trajectory Plot : Shows the parabolic path followed by the projectile. Range vs. Angle : Demonstrates that the range is maximized at \\( 45^\\circ \\) . 8. Practical Applications Sports \u2013 Optimizing the angle for maximum distance in javelin throws, soccer kicks, or basketball shots. Military \u2013 Calculating projectile trajectories for artillery and missiles. Engineering \u2013 Predicting motion paths in robotics and mechanical systems. Astrophysics \u2013 Understanding planetary orbits and space vehicle trajectories. 9. Extensions To make the model more realistic, we can: - Introduce air resistance using drag force proportional to velocity. - Consider uneven terrain , where the landing height differs from the launch height. - Include wind effects , adding a horizontal acceleration component. 10. Conclusion Projectile motion is a fundamental concept with rich mathematical structures and numerous applications. By understanding its governing equations, we can predict and optimize trajectories in various real-world scenarios. Would you like me to extend this with numerical simulations for air resistance or varying gravitational fields? \ud83d\ude80","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"Here's a detailed explanation of projectile motion, including its governing equations, derivations, and graphical representations.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-theory-and-analysis","text":"","title":"Projectile Motion: Theory and Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-introduction","text":"Projectile motion refers to the motion of an object that is launched into the air and moves under the influence of gravity alone, assuming air resistance is negligible. It is a fundamental concept in physics with applications in sports, engineering, and astrophysics. The motion of the projectile can be broken down into horizontal (x-direction) and vertical (y-direction) components, each governed by Newton's laws of motion.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-equations-of-motion","text":"","title":"2. Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-assumptions","text":"The projectile is launched from an initial height \\( y_0 = 0 \\) . Air resistance is neglected. The acceleration due to gravity ( \\( g \\) ) is constant and acts downward. The initial velocity \\( v_0 \\) is at an angle \\( \\theta \\) with the horizontal axis.","title":"2.1 Assumptions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-decomposing-initial-velocity","text":"The initial velocity \\( v_0 \\) is split into horizontal and vertical components: $$ v_{0x} = v_0 \\cos\\theta $$ $$ v_{0y} = v_0 \\sin\\theta $$","title":"2.2 Decomposing Initial Velocity"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-horizontal-motion","text":"Since there is no horizontal acceleration (neglecting air resistance), the horizontal displacement \\( x \\) after time \\( t \\) is given by: \\[ x = v_{0x} t = v_0 \\cos\\theta \\cdot t \\] The horizontal velocity remains constant: \\[ v_x = v_0 \\cos\\theta \\]","title":"3. Horizontal Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-vertical-motion","text":"The vertical motion is influenced by gravity. Using kinematic equations: \\[ y = v_{0y} t - \\frac{1}{2} g t^2 \\] The vertical velocity at time \\( t \\) is: \\[ v_y = v_{0y} - g t \\] The projectile reaches its maximum height when \\( v_y = 0 \\) , which occurs at: \\[ t_{\\text{max}} = \\frac{v_0 \\sin\\theta}{g} \\] The maximum height ( \\( H \\) ) is given by: \\[ H = \\frac{(v_0 \\sin\\theta)^2}{2g} \\]","title":"4. Vertical Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-time-of-flight","text":"The total time the projectile spends in the air is found by setting \\( y = 0 \\) in the vertical displacement equation: \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\( t \\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\]","title":"5. Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-range-of-the-projectile","text":"The range \\( R \\) is the total horizontal distance traveled before the projectile lands: \\[ R = v_{0x} \\cdot t \\] Substituting \\( v_{0x} = v_0 \\cos\\theta \\) and the total time of flight: \\[ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} \\] Using the trigonometric identity \\( 2\\sin\\theta\\cos\\theta = \\sin(2\\theta) \\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] The maximum range occurs when \\( \\theta = 45^\\circ \\) , giving: \\[ R_{\\text{max}} = \\frac{v_0^2}{g} \\]","title":"6. Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#7-graphical-representation","text":"Let's visualize how the range varies with launch angle.","title":"7. Graphical Representation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-code-for-simulation","text":"This script plots: The trajectory of a projectile. The range as a function of launch angle. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # Gravity (m/s^2) v0 = 20 # Initial velocity (m/s) angles = np.linspace(0, 90, 100) # Launch angles from 0 to 90 degrees # Function to compute projectile range def projectile_range(theta, v0, g=9.81): theta_rad = np.radians(theta) return (v0**2 * np.sin(2 * theta_rad)) / g # Compute ranges for different angles ranges = [projectile_range(theta, v0) for theta in angles] # Trajectory Simulation for a specific angle (e.g., 45\u00b0) theta_trajectory = 45 # Change this to see different angles t_flight = (2 * v0 * np.sin(np.radians(theta_trajectory))) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(np.radians(theta_trajectory)) * t y = v0 * np.sin(np.radians(theta_trajectory)) * t - 0.5 * g * t**2 # Plot 1: Projectile Trajectory plt.figure(figsize=(8, 6)) plt.plot(x, y, label=f'Trajectory at {theta_trajectory}\u00b0', color='b') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion Trajectory') plt.legend() plt.grid() plt.show() # Plot 2: Range vs Angle plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f'Initial velocity: {v0} m/s', color='r') plt.axvline(45, linestyle=\"--\", color=\"b\", label=\"Max range at 45\u00b0\") plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid() plt.show()","title":"Python Code for Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graph-analysis","text":"Trajectory Plot : Shows the parabolic path followed by the projectile. Range vs. Angle : Demonstrates that the range is maximized at \\( 45^\\circ \\) .","title":"Graph Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#8-practical-applications","text":"Sports \u2013 Optimizing the angle for maximum distance in javelin throws, soccer kicks, or basketball shots. Military \u2013 Calculating projectile trajectories for artillery and missiles. Engineering \u2013 Predicting motion paths in robotics and mechanical systems. Astrophysics \u2013 Understanding planetary orbits and space vehicle trajectories.","title":"8. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#9-extensions","text":"To make the model more realistic, we can: - Introduce air resistance using drag force proportional to velocity. - Consider uneven terrain , where the landing height differs from the launch height. - Include wind effects , adding a horizontal acceleration component.","title":"9. Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#10-conclusion","text":"Projectile motion is a fundamental concept with rich mathematical structures and numerous applications. By understanding its governing equations, we can predict and optimize trajectories in various real-world scenarios. Would you like me to extend this with numerical simulations for air resistance or varying gravitational fields? \ud83d\ude80","title":"10. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"}]}